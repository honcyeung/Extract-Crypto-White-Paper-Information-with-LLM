{
    "whitepaper_whalecoin.pdf": {
        "project_name": "WhaleCoin",
        "ticker_symbol": "WHALE",
        "consensus_mechanism": "Mining",
        "key_features": [
            "Decentralized social network",
            "Exclusive 'Whale' role for users holding at least 1,000 tokens",
            "Limited number of Whales",
            "Whales influence blockchain reward distribution",
            "Incentive structure for Followers to gain approval from Whales",
            "Users receive a portion of the mined block reward based on upvotes from Whales",
            "Limited supply",
            "Impossible to counterfeit",
            "Easy access to cryptocurrency processes",
            "Mining through solving CAPTCHAs",
            "Use of cryptographic obfuscator technology",
            "Successful user attraction through giveaways",
            "Social network integration",
            "User rewards based on upvotes",
            "Prevention of spam through account limitations",
            "Users receive a portion of block rewards based on upvotes received.",
            "Upvotes are weighted by the amount of Steem currency held by the user.",
            "Influence of 'Steem Whales' on vote weight.",
            "Algorithm adjustments to balance user influence.",
            "Equal power for all Whales with over 1,000 coins",
            "Supports a maximum of 864 new Whales every 30 days",
            "5 coin reward rate every 15 seconds",
            "Whales can share news and videos",
            "Low-cost upvote system for Whales",
            "Decentralized social network integration",
            "Smart contract reward distribution",
            "Developer's fund for maintenance and development",
            "Developer's Fund for development and maintenance",
            "Social network Dapp connecting to WhaleCoin",
            "Rewards paid to followers based on upvotes from whales",
            "Anti-spam limit on reward algorithm",
            "Decay of upvote rewards over time",
            "Potential moderator role for network optimization",
            "Contract rules to promote decentralization and participation",
            "Mining schedule similar to Ethereum",
            "Blocks are mined approximately every 15 seconds",
            "Initial 200,000 blocks rewards not paid to Whale followers for fair distribution",
            "Users holding at least 1,000 Whale Coins can send upvotes in reward distribution",
            "Potential future upgrade to Proof of Stake depending on Ethereum's changes",
            "Experimental idea",
            "Decentralized mined currency",
            "Economic smart contract rules"
        ],
        "token_description": "WhaleCoin is a mined cryptographic blockchain designed to power a unique decentralized social network, where users holding at least 1,000 tokens are designated as 'Whales' and can influence blockchain rewards.",
        "total_supply": "limited in supply",
        "utility": "The primary use case of WhaleCoin is to enable users to participate in a decentralized social network, where Whales can send upvotes to other users and influence reward distribution.",
        "name": "Rhett Creighton",
        "role": "Co-founder",
        "responsibilities": "Co-founder of WhaleCoin, involved in the development of the project."
    },
    "whitepaper_oyster.pdf": {
        "project_name": "Oyster Protocol",
        "ticker_symbol": "OYST",
        "consensus_mechanism": "Proof of Work",
        "key_features": [
            "Decentralized storage ledger",
            "Silent traffic revenue generation for websites",
            "File verification and retrieval",
            "Distributed reputation system",
            "Focus on privacy in online advertising",
            "Integration of ad blocking technology",
            "Convenient and private storage solutions",
            "Decentralized file storage",
            "Anonymity and privacy",
            "Secure and reliable file retrieval",
            "Equilibrium between content publishers and consumers",
            "Secure and anonymous file storage",
            "Use of Broker Nodes for data management",
            "Distributed Reputation System for contract sharing",
            "Integration with web browsers for discovering Oyster Pearls",
            "Treasure Maps",
            "Embedded Oyster Pearls",
            "Broker Node contracts via Distributed Reputation System",
            "Access to the Tangle and Blockchain",
            "Peer-to-peer connection initiations",
            "Distributed Reputation System",
            "Oyster Pearls as rewards",
            "Directed Acyclic Graph structure",
            "Pass on Proof of Work burden to Web Nodes",
            "Geographically distribute redundant copies of data",
            "Load balance storage burden with Swarm Intelligence",
            "Increased resistance against attack vectors",
            "Faster average confirmation time for transactions",
            "Blockless distributed ledger",
            "Directed Acyclic Graph",
            "Transaction confirmation through referencing prior transactions",
            "Data redundancy through mesh-net of Nodes",
            "Automatic deletion of old data by Tangle Nodes",
            "Automatic Snapshots",
            "Swarm Intelligence",
            "Scalability improvements",
            "Swarm Intelligence for scalability",
            "Rewards for bandwidth access to the Tangle",
            "Broker Nodes act as a bridge from the Tangle to Web Nodes and Storage Users",
            "Data stored in ~1 KB parts within transaction payload",
            "Uses SHA256 hash for data storage and retrieval",
            "Data storage and retrieval on the Tangle",
            "File encryption in the browser",
            "Use of Oyster Handle for secure access",
            "Uses a unique 80 character long Handle for encryption and decryption",
            "Incorporates a Primordial Hash for data protection",
            "Utilizes cryptographic salt to enhance security against hash function weaknesses",
            "Encryption using a Handle as the key",
            "Support for adding a passphrase to the encryption scheme",
            "Data split into ~1 KB parts",
            "Use of SHA256 hashes for data representation",
            "Distributed Reputation System for Broker Nodes selection",
            "Competitive race between Broker Nodes for performance",
            "Competitive race between Broker Nodes",
            "Installation of Pearls into the Data Map",
            "Reputation-based revenue system for Broker Nodes",
            "Use of Broker Nodes",
            "Tangle technology for transactions",
            "Data Map embedding",
            "Cryptographically signed statements for identity verification",
            "Utilizes Tangle for transactions",
            "Broker Nodes delegate Proof of Work tasks",
            "Embedded data structure with Oyster Pearls",
            "Access to ETH balances for Gas fees",
            "Broker Nodes manage ETH balances to pay Gas fees for transactions",
            "Simplifies complex Blockchain transactions for Storage Users",
            "Mitigates red herring attack vector by embedding Pearls in the Data Map",
            "Red herring attack mitigation",
            "Use of Broker Nodes for validation",
            "Energy efficiency in data verification",
            "Broker Nodes have consistent identities and associated reputation scores",
            "Web Nodes and Storage Users have dynamic identities",
            "Web Nodes reset their identities periodically",
            "Storage Users negotiate with Broker Nodes on a session basis",
            "Payments involve embedding Pearls in a Data Map and compensation for Broker Nodes",
            "Economic incentives for data installation",
            "Unique metaphor of candle and wax to describe data processing",
            "Broker Nodes with cryptographic identities",
            "Reputation scores that increase exponentially with performance",
            "Economic incentives that encourage competition among Nodes",
            "Broker Nodes earn exponentially more in the long term by burning candles quickly",
            "Oyster Pearls are embedded into a Data Map",
            "Each Sector of a Data Map represents 1,000,000 hashes and holds user data",
            "Sectors must contain at least one embedded treasure of Pearls",
            "Data storage on the Tangle",
            "Embedded treasures of Pearls",
            "Retention of data based on the amount of Pearls",
            "Oyster Contract for locking Pearls",
            "Claiming Pearls in separate time zones (Epochs)",
            "Epochs defined as 1 year long",
            "Web Nodes claim Pearls on behalf of Website Owners",
            "Data Maps defined by SHA256 hash known as Genesis Hash",
            "Web Nodes perform Proof of Work tasks to obtain Genesis Hashes",
            "Nodes perform specific Proof of Work tasks defined by Counterparty Nodes",
            "Involves quoting two unconfirmed transactions from the Tangle",
            "Verification of transactions against specified branch and trunk identities",
            "Genesis Hash is exchanged upon successful verification",
            "Web Nodes search for treasure in a random Sector of the Data Map derived from the Genesis Hash",
            "Web Nodes select random Sectors of the Data Map",
            "Reference to the Tangle for Proof of Work verification",
            "Abandoning Sectors if Proof of Work was performed by another Web Node",
            "Scrolling through consecutive hashes of a Sector to find treasure",
            "Web Node strategies",
            "Bluffing Web Nodes",
            "Game theory mechanics",
            "Sector exclusivity",
            "Epoch-based treasure finding",
            "Utilizes GPU for hashing via WebGL2",
            "Involves a hashchain mechanism",
            "Defines treasure existence per Sector",
            "Data Map validation",
            "Reputation degradation for invalid Data Maps",
            "Controlled data consumption over time",
            "Prevention of bandwidth intensive tasks",
            "Web Nodes perform bandwidth-efficient tasks",
            "Utilizes both CPU and GPU for operations",
            "Incorporates treasure hunting in a Data Map",
            "Pearls are linked to Ethereum addresses",
            "Uses HTML5 localstorage for key storage",
            "Collaboration between Web Node and Broker Node",
            "Secure transmission of private seed key",
            "Transaction invocation to claim assets (Pearls)",
            "Gas payment for transactions using ETH",
            "Web Node and Broker Node interaction",
            "Concerns about malicious actors",
            "Transaction fuelled by ETH",
            "Potential for repeated small financial losses",
            "Consistent cryptographic identities for reputation",
            "Focus on reputable Broker Nodes for service trust",
            "Broker Node verification process",
            "Economic viability for treasure unlocking",
            "Web Nodes perform Proof of Work for payments",
            "Web Nodes require access to the Tangle",
            "Intermediary light client hosts for Tangle requests",
            "Collaboration between Web Nodes and Broker Nodes",
            "Requires SSL for all Tangle requests",
            "Enables peer-to-peer connections between Web Nodes",
            "Utilizes PeerJS Library and WebRTC Standard",
            "Focus on unclaimed Genesis hashes and Oyster Pearls",
            "Genesis Hashes",
            "Broker Nodes",
            "Web Nodes",
            "Malicious Actor Prevention",
            "Removes reliance on altruistic behavior",
            "Equilibrium of the network prevents Broker Nodes from performing Proof of Work when saturated",
            "Exchange sequence between Web Nodes and Broker Nodes",
            "Utilizes a Broker Node and Web Node architecture",
            "Dynamic Proof of Work burden based on network economy",
            "Integration with the Tangle for transaction confirmation",
            "No transaction fees",
            "Scalability through a directed acyclic graph (DAG)",
            "Decentralized and secure transactions",
            "Ability to handle microtransactions",
            "Broker Node delivers Genesis Hash or Neighbor identity to Web Node",
            "Distributed Reputation System pressures Broker Node",
            "Genesis Hashes migrate from Broker Nodes to Web Nodes",
            "Web Nodes intentionally forget Genesis Hashes only if all Epochs of all Sectors have been claimed",
            "Storage Users can extend the lifespan of data by adding more Pearls",
            "Web Nodes use HTML5 localstorage to retain data",
            "Use of HTML5 localstorage for data retention",
            "Migration of Genesis Hashes between Broker Nodes and Web Nodes",
            "Pruning of data to optimize storage",
            "Securing Genesis Hashes within the network",
            "Peer-to-peer interactions",
            "WebRTC Standard for communication",
            "Cryptographic pseudo-persistent identity",
            "Dynamic turnover cycles within the Web Node topology",
            "Identity refreshing to maintain network responsiveness",
            "Ability for Web Nodes to reset identity and build new Neighbor relationships",
            "Decentralized identity management",
            "Broker Nodes facilitate connections between Web Nodes",
            "Distributed Reputation System for trust",
            "Website Owners can choose trusted Broker Nodes",
            "Broker Nodes retain a list of recently active Web Nodes and their identities",
            "Web Nodes purchase identities from Broker Nodes",
            "Neighbor list of Web Nodes expands exponentially",
            "Distributed Reputation System for reputation statements",
            "Web Node communication with Broker Nodes",
            "Periodic identity reset for Web Nodes",
            "Exchange Sequence for information exchange",
            "Dynamic Proof of Work burden magnitude based on supply/demand",
            "Integration with the Tangle for transaction management",
            "References to transactions for data storage and confirmation",
            "ReplayBundle function on the Tangle",
            "Manual setting of branch and trunk of transactions",
            "Verification of transaction identity by Neighbor",
            "Burden magnitude agreement for Proof of Work",
            "Exchange of Genesis Hash or Neighbor identity",
            "Broker Nodes hold relatively new Genesis Hashes",
            "Web Nodes hold relatively older Genesis Hashes",
            "Higher expectation of unclaimed treasure for new Genesis Hashes",
            "Web Nodes prioritize Broker Nodes for Genesis Hashes",
            "Constant migration of Genesis Hashes towards Web Nodes",
            "High imperviousness to data loss in Web Nodes",
            "Measurement of connection latency for consistent communication types",
            "Decentralized low-latency mesh-net",
            "Efficient Node hop pathways",
            "Optimization of Neighbor list based on connection latency",
            "Focus on nearby communication for improved performance",
            "Support for third-party applications",
            "Open source extensions",
            "Monetization opportunities for website owners",
            "API calls for efficient audio packet transmission",
            "Decentralized code development and deployment",
            "Optimized mesh-net Node topology",
            "Automated Node Hop Logic interaction via a simple API",
            "Allows creative content publishers to gain full autonomy over the monetization of their content",
            "Radical departure from traditional advertisement exchanges",
            "Allows creative content publishers to gain full autonomy over monetization",
            "Visitors can pay for content without distractions",
            "Simple integration for website owners with a single line of code",
            "Automatic payments in Pearls",
            "Visitors can easily disable the protocol if they choose",
            "Allows visitors to disable participation in computational tasks",
            "Uses HTML5 localstorage for data retention",
            "Associates Ethereum address with Website Owner for treasure hunting sessions",
            "Web Node functionality",
            "Association of Ethereum addresses with website owners",
            "Treasure hunt mechanism",
            "Claiming of discovered Pearls in the Oyster Contract",
            "Decentralized system",
            "Trustless mechanism",
            "ERC20-compliant token",
            "Custom bury function to block withdrawals while allowing deposits",
            "Allows deposits to buried addresses to extend data lifespan",
            "Prevents intentional data expiration",
            "Broker Nodes manage file uploads to the Tangle",
            "Pearls are unspendable when embedded in the Data Map",
            "Private seed keys of Ethereum addresses are locked by the bury function",
            "Allows withdrawal of Pearls via ERC20 transfer function",
            "Involves Broker Nodes and Web Nodes for claim functions",
            "Rewards for unclaimed Pearls within Epochs",
            "Each Ethereum address represents a unique Sector",
            "Bridges economic motivations of Website Owners, Web Nodes, Broker Nodes, and Storage Users",
            "Auditable fee structure for Broker Nodes",
            "Direct transfer of claimable Pearls to Website Owners",
            "Involves a brokerage fee for Broker Nodes",
            "Use of Broker Nodes for data commitment",
            "Distributed Reputation System for node reliability",
            "Data processing from both ends of the file",
            "Utilizes the Tangle for data storage and verification",
            "Involves Broker Nodes for data integrity checks",
            "Includes a Distributed Reputation System for reporting offenses",
            "Encourages honest behavior among Broker Nodes through reputation boosts",
            "Verification process guards against dishonest Broker Nodes",
            "Guarantees no flaw in the Data Map due to programming errors or execution bugs",
            "Uses SHA256 function for hash generation",
            "Employs a Distributed Reputation System for selecting Broker Nodes",
            "Data retrieval via Broker Nodes",
            "Encryption using Oyster Handle and optional passphrase",
            "Permanent data loss risk if keys are forgotten",
            "Integration with Tangle technology",
            "Utilizes SHA512 hashchain for data validation",
            "Incorporates a Distributed Reputation System",
            "Employs SHA256 hashchain for data retrieval",
            "Data is stored on the user's persistent storage device",
            "Data integrity through embedded checksum",
            "Access files through any client",
            "Distributed Reputation System for monitoring Broker Nodes",
            "Broker Nodes operate like eBay sellers",
            "Web Nodes/Storage Users operate like eBay buyers",
            "Reputation-based transaction selection",
            "Consideration of network latency and traffic constraints",
            "Broker Nodes must maintain honesty to be profitable",
            "Reputation scores start at zero with no negatives",
            "Honest Broker Nodes gradually gain reputation",
            "Access to the Tangle is verifiable and fault tolerant",
            "Reputable Broker Nodes confirm access to the Tangle",
            "Fault tolerant system",
            "Reputable Broker Nodes",
            "Value based transactions",
            "Reputation system for nodes",
            "Use of PGP keys for identity",
            "Broker Nodes safeguard PGP keys and treasure coordinates",
            "Value-based transactions between Broker Nodes and Storage Users",
            "Negotiation of minimal state of the Tangle and Blockchain",
            "Use of SHA256 hash for Data Map transactions",
            "Utilizes a Tangle structure for transactions",
            "Involves Broker Nodes and Data Maps",
            "Digital signing of contracts with PGP signatures",
            "Performance estimation of Broker Nodes by Web Nodes",
            "Performance-based reputation scoring for Broker Nodes",
            "Economic incentives for fast Proof of Work execution",
            "Ability for Broker Nodes to offset Proof of Work burden to Web Nodes",
            "Broker Nodes can offset Proof of Work burden to Web Nodes",
            "Broker Nodes with strong reputation can install Data Map faster",
            "Contractual agreements define minimal state of the Blockchain",
            "Claims from treasure addresses are made at the Oyster Contract",
            "Revenue generation",
            "Anonymous and accessible storage",
            "Decentralized application development and deployment",
            "Access to a decentralized mesh network",
            "Web Nodes can be everyday devices",
            "Optimized Node topology through neighbor selection",
            "Extensions can be built in Javascript",
            "Decentralized applications",
            "Latency optimized mesh net",
            "Unlocks revenue potential of websites",
            "Addresses storage dilemmas for individuals and corporations"
        ],
        "token_description": "The Oyster Protocol enables websites to silently generate traffic revenue as visitors perform Proof of Work for a decentralized storage ledger.",
        "total_supply": "Not specified in the text.",
        "utility": "The primary use case of the Oyster Pearl token is to facilitate the monetization of web content through a decentralized storage ledger.",
        "name": "Bruno Block",
        "role": "Founder",
        "responsibilities": "Authored the whitepaper and leads the development of the Oyster Protocol."
    }
}